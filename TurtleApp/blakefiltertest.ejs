<!-- Status Filter Form -->
<form method="GET" action="eventfilter" style="text-align: center; margin-bottom: 20px;">
    <label for="statusFilter">Filter by Status:</label>
    <select name="statusFilter" id="statusFilter">
        <option value="">--Select Status--</option>
        <option value="Scheduled" <%= statusFilter === 'Scheduled' ? 'selected' : '' %>>Scheduled</option>
        <option value="Cancelled" <%= statusFilter === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
        <option value="Completed" <%= statusFilter === 'Completed' ? 'selected' : '' %>>Completed</option>
    </select>
    <button type="submit">Apply Filter</button>
  </form>
  
  app.get('/eventfilter', (req, res) => {
    const statusFilter = req.body.statusFilter || ''; // Get the statusFilter value from the query string, default to an empty string if not provided
    
    let query = knex('events')
      .join('eventstatus', 'events.eventid', '=', 'eventstatus.eventid')
      .select(
        'events.eventid',
        'events.confirmedeventdate',
        'events.contact_first',
        'events.contact_last',
        'events.contactphone',
        'events.numparticipants',
        'events.eventstart',
        'events.eventduration',
        'events.streetaddress',
        'events.city',
        'events.state',
        'events.zip',
        'eventstatus.description as status_description'
      );
  
    if (statusFilter) {
      query = query.where('eventstatus.description', statusFilter); // Add filter condition if statusFilter is provided
    }
  
    query
      .then(results => {
        // Render the EJS template with the events and the selected statusFilter
        res.render('eventManagement', { events: results, statusFilter });
      })
      .catch(err => {
        console.error(err);
        res.send('Error fetching events.');
      });
  });
  